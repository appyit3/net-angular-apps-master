apiVersion: apps/v1
kind: Deployment
metadata:
  name: dncapi-deployment
spec:
  selector:
    matchLabels:
      app: dncapi-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: dncapi-pod
    spec:
      containers:
        - name: dncapi-container
          image: dncimg:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80             
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: remapi-deployment
spec:
  selector:
    matchLabels:
      app: remapi-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: remapi-pod
    spec:
      containers:
        - name: remapi-container
          image: remimg:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clientapp-deployment
spec:
  selector:
    matchLabels:
      app: clientapp-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: clientapp-pod
    spec:
      containers:
        - name: clientapp-container
          image: clientimg:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP   
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
spec:
  selector:
    matchLabels:
      app: webapp-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: webapp-pod
    spec:
      containers:
        - name: webapp-container
          image: webappimg:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP   
---
apiVersion: v1
kind: Service
metadata:
    name: dncapisvc
spec:
    ports:
    - port: 80
      nodePort: 30090
      protocol: TCP
      targetPort: 80
    selector:
        app: dncapi-pod
    type: NodePort
---
apiVersion: v1
kind: Service
metadata:
    name: remapisvc
spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
        app: remapi-pod
    type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
    name: clientsvc
spec:
    ports:
    - port: 80
      protocol: TCP
      nodePort: 30030
      targetPort: 80
    selector:
        app: clientapp-pod
    type: NodePort
---
apiVersion: v1
kind: Service
metadata:
    name: webappsvc
spec:
    ports:
    - port: 80
      protocol: TCP
      nodePort: 30040
      targetPort: 80
    selector:
        app: webapp-pod
    type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: app-ingress
    annotations:
        kubernetes.io/ingress.class: "nginx"
spec:
    rules:
    - http:  
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: clientsvc
              port:
                number: 80    
        - path: /api
          pathType: Prefix
          backend:
            service:
              name: dncapisvc
              port:
                number: 80    
        - path: /webapp
          pathType: Prefix
          backend:
            service:
              name: webappsvc
              port:
                number: 80    
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
  name: nginx
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: k8s.io/ingress-nginx